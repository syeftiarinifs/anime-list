{"ast":null,"code":"var _jsxFileName = \"/Users/syeftiarini.sutendi/anime-list-2/src/pages/Favorites/index.tsx\";\nimport Pagination from '@mui/material/Pagination';\nimport TextField from '@mui/material/TextField';\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\nimport AnimeCardLoader from \"../../components/AnimeCard/CardLoader\";\nimport { getData } from '../../helpers/LocalStorage';\nimport { styContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT_PERPAGE = 12;\nconst Home = () => {\n  const currFavorit = getData(ANIME_LIST_STORAGE_KEY) || [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"sty-input\",\n        value: keyword,\n        onChange: e => handleChangeKeyWord(e),\n        placeholder: \"Search Anime\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sty-anime-loader-container\",\n        children: [1, 2, 3, 4, 5, 6].map(index => /*#__PURE__*/_jsxDEV(AnimeCardLoader, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: errMessage ? /*#__PURE__*/_jsxDEV(EmptyState, {\n          title: \"Uh oh, Error Occured\",\n          description: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isAnyAnime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sty-anime-container\",\n            children: animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(AnimeCard, {\n              anime: anime\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n            title: \"Anime not found\",\n            description: \"Please use other keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false), isAnyAnime && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"sty-pagination\",\n        count: lastVisiblePage,\n        page: page,\n        onChange: handleChangePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Pagination","TextField","Header","AnimeCard","EmptyState","AnimeCardLoader","getData","styContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","LIMIT_PERPAGE","Home","currFavorit","ANIME_LIST_STORAGE_KEY","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","keyword","onChange","e","handleChangeKeyWord","placeholder","variant","loading","map","index","errMessage","title","description","isAnyAnime","animeList","anime","count","lastVisiblePage","page","handleChangePage","_c","$RefreshReg$"],"sources":["/Users/syeftiarini.sutendi/anime-list-2/src/pages/Favorites/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport Pagination from '@mui/material/Pagination';\nimport TextField from '@mui/material/TextField';\n\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\nimport AnimeCardLoader from \"../../components/AnimeCard/CardLoader\";\n\nimport { getData } from '../../helpers/LocalStorage';\n\nimport { styContainer } from './styles';\n\nconst  LIMIT_PERPAGE = 12;\n\nconst Home = () => {\n    const currFavorit = getData(ANIME_LIST_STORAGE_KEY) || []\n\n  return(\n    <>\n      <Header />\n      <div className={styContainer}>\n        <TextField className=\"sty-input\" value={keyword} onChange={(e) =>handleChangeKeyWord(e)} placeholder=\"Search Anime\" variant=\"outlined\" />\n        { loading ? \n          <div className=\"sty-anime-loader-container\">\n            {[1,2,3,4,5,6].map((index) => (\n              <AnimeCardLoader key={index} />\n            ))}\n          </div>\n          :\n          <>\n            { errMessage ?\n              <EmptyState title=\"Uh oh, Error Occured\" description={errMessage} />\n            :\n              <>\n                { isAnyAnime ? \n                  <div className=\"sty-anime-container\">\n                    {animeList.map((anime, index) => (\n                      <AnimeCard key={index} anime={anime} />\n                    ))}\n                  </div>\n                : \n                  <EmptyState title=\"Anime not found\" description=\"Please use other keyword\" />\n                }\n              </>\n            }\n          </>\n        }\n        {isAnyAnime && <Pagination className=\"sty-pagination\" count={lastVisiblePage} page={page} onChange={handleChangePage} />}\n      </div>\n    </>\n  )\n\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}