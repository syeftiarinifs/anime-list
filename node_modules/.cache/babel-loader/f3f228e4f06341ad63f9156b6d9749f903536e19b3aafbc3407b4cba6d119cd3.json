{"ast":null,"code":"var _jsxFileName = \"/Users/syeftiarini.sutendi/anime-list-2/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport TextField from '@mui/material/TextField';\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\nimport AnimeCardLoader from \"../../components/AnimeCard/CardLoader\";\nimport { styContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT_PERPAGE = 12;\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    page: defaultPage\n  } = useParams();\n  const [page, setPage] = useState(Number(defaultPage || 0));\n  const [animeList, setAnimeList] = useState([]);\n  const [lastVisiblePage, setLastVisiblePage] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errMessage, setErrMessgae] = useState('');\n  const handleChangePage = (event, value) => {\n    setPage(value);\n    navigate(`?page=${value}`);\n  };\n  const handleChangeKeyWord = e => {\n    const val = e.target.value;\n    setKeyword(val);\n  };\n  const fetchAnimeData = useCallback(() => {\n    setLoading(true);\n    fetch(`https://api.jikan.moe/v4/anime?page=${page}&limit=${LIMIT_PERPAGE}&q=${keyword}`).then(response => response.json()).then(data => {\n      if (data !== null && data !== void 0 && data.data) {\n        var _data$pagination;\n        setAnimeList(data === null || data === void 0 ? void 0 : data.data);\n        setLastVisiblePage(data === null || data === void 0 ? void 0 : (_data$pagination = data.pagination) === null || _data$pagination === void 0 ? void 0 : _data$pagination.last_visible_page);\n      } else {\n        setErrMessgae(data.message);\n      }\n    }).catch(err => {\n      setErrMessgae(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [keyword, page]);\n  useEffect(() => {\n    fetchAnimeData();\n  }, [fetchAnimeData]);\n  const isAnyAnime = Boolean(animeList === null || animeList === void 0 ? void 0 : animeList.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"sty-input\",\n        value: keyword,\n        onChange: e => handleChangeKeyWord(e),\n        placeholder: \"Search Anime\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sty-anime-loader-container\",\n        children: [1, 2, 3, 4, 5, 6].map(index => /*#__PURE__*/_jsxDEV(AnimeCardLoader, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: errMessage ? /*#__PURE__*/_jsxDEV(EmptyState, {\n          title: \"Uh oh, Error Occured\",\n          description: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isAnyAnime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sty-anime-container\",\n            children: animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(AnimeCard, {\n              anime: anime\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n            title: \"Anime not found\",\n            description: \"Please use other keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false), isAnyAnime && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"sty-pagination\",\n        count: lastVisiblePage,\n        page: page,\n        onChange: handleChangePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"jdxNO5H5vA+UfRF5HV/swv6ZORg=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useCallback","useEffect","useState","useNavigate","useParams","Pagination","TextField","Header","AnimeCard","EmptyState","AnimeCardLoader","styContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","LIMIT_PERPAGE","Home","_s","navigate","page","defaultPage","setPage","Number","animeList","setAnimeList","lastVisiblePage","setLastVisiblePage","keyword","setKeyword","loading","setLoading","errMessage","setErrMessgae","handleChangePage","event","value","handleChangeKeyWord","e","val","target","fetchAnimeData","fetch","then","response","json","data","_data$pagination","pagination","last_visible_page","message","catch","err","finally","isAnyAnime","Boolean","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","placeholder","variant","map","index","title","description","anime","count","_c","$RefreshReg$"],"sources":["/Users/syeftiarini.sutendi/anime-list-2/src/pages/Home/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport Pagination from '@mui/material/Pagination';\nimport TextField from '@mui/material/TextField';\n\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\nimport AnimeCardLoader from \"../../components/AnimeCard/CardLoader\";\nimport { styContainer } from './styles';\n\nconst  LIMIT_PERPAGE = 12;\n\nconst Home = () => {\n  const navigate = useNavigate()\n  const { page: defaultPage } = useParams();\n  const [page, setPage] = useState(Number(defaultPage || 0));\n  const [animeList, setAnimeList] = useState([])\n  const [lastVisiblePage, setLastVisiblePage] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errMessage, setErrMessgae] = useState('')\n\n  const handleChangePage = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value);\n    navigate(`?page=${value}`)\n  };\n\n  const handleChangeKeyWord = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const val = e.target.value;\n    setKeyword(val);\n  };\n\n  const fetchAnimeData = useCallback(() => {\n    setLoading(true)\n    fetch(`https://api.jikan.moe/v4/anime?page=${page}&limit=${LIMIT_PERPAGE}&q=${keyword}`)\n    .then((response) => response.json())\n    .then((data) => {\n      if(data?.data){\n        setAnimeList(data?.data);\n        setLastVisiblePage(data?.pagination?.last_visible_page)\n      } else {\n        setErrMessgae(data.message)\n      }\n    })\n    .catch((err) => {\n      setErrMessgae(err.message)\n    })\n    .finally(() => {\n      setLoading(false)\n    });\n  }, [keyword, page])\n\n  useEffect(() => {\n    fetchAnimeData();\n  }, [fetchAnimeData]);\n\n  const isAnyAnime = Boolean(animeList?.length)\n\n  return(\n    <>\n      <Header />\n      <div className={styContainer}>\n        <TextField className=\"sty-input\" value={keyword} onChange={(e) =>handleChangeKeyWord(e)} placeholder=\"Search Anime\" variant=\"outlined\" />\n        { loading ? \n          <div className=\"sty-anime-loader-container\">\n            {[1,2,3,4,5,6].map((index) => (\n              <AnimeCardLoader key={index} />\n            ))}\n          </div>\n          :\n          <>\n            { errMessage ?\n              <EmptyState title=\"Uh oh, Error Occured\" description={errMessage} />\n            :\n              <>\n                { isAnyAnime ? \n                  <div className=\"sty-anime-container\">\n                    {animeList.map((anime, index) => (\n                      <AnimeCard key={index} anime={anime} />\n                    ))}\n                  </div>\n                : \n                  <EmptyState title=\"Anime not found\" description=\"Please use other keyword\" />\n                }\n              </>\n            }\n          </>\n        }\n        {isAnyAnime && <Pagination className=\"sty-pagination\" count={lastVisiblePage} page={page} onChange={handleChangePage} />}\n      </div>\n    </>\n  )\n\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}