{"ast":null,"code":"var _jsxFileName = \"/Users/syeftiarini.sutendi/anime-list-2/src/pages/Favorites/index.tsx\";\nimport Pagination from '@mui/material/Pagination';\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\nimport { getData } from '../../helpers/LocalStorage';\nimport { styContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  const currFavorit = getData(ANIME_LIST_STORAGE_KEY) || [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styContainer,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: Boolean(currFavorit) ? /*#__PURE__*/_jsxDEV(EmptyState, {\n          title: \"Uh oh, Error Occured\",\n          description: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isAnyAnime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sty-anime-container\",\n            children: animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(AnimeCard, {\n              anime: anime\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n            title: \"Anime not found\",\n            description: \"Please use other keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false), isAnyAnime && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"sty-pagination\",\n        count: lastVisiblePage,\n        page: page,\n        onChange: handleChangePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Pagination","Header","AnimeCard","EmptyState","getData","styContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","currFavorit","ANIME_LIST_STORAGE_KEY","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Boolean","title","description","errMessage","isAnyAnime","animeList","map","anime","index","count","lastVisiblePage","page","onChange","handleChangePage","_c","$RefreshReg$"],"sources":["/Users/syeftiarini.sutendi/anime-list-2/src/pages/Favorites/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport Pagination from '@mui/material/Pagination';\n\nimport Header from '../../components/Header';\nimport AnimeCard from '../../components/AnimeCard';\nimport EmptyState from \"../../components/EmptyState\";\n\nimport { getData } from '../../helpers/LocalStorage';\n\nimport { styContainer } from './styles';\n\n\nconst Home = () => {\n    const currFavorit = getData(ANIME_LIST_STORAGE_KEY) || []\n\n  return(\n    <>\n      <Header />\n      <div className={styContainer}>\n          <>\n            { Boolean(currFavorit) ?\n              <EmptyState title=\"Uh oh, Error Occured\" description={errMessage} />\n            :\n              <>\n                { isAnyAnime ? \n                  <div className=\"sty-anime-container\">\n                    {animeList.map((anime, index) => (\n                      <AnimeCard key={index} anime={anime} />\n                    ))}\n                  </div>\n                : \n                  <EmptyState title=\"Anime not found\" description=\"Please use other keyword\" />\n                }\n              </>\n            }\n          </>\n        {isAnyAnime && <Pagination className=\"sty-pagination\" count={lastVisiblePage} page={page} onChange={handleChangePage} />}\n      </div>\n    </>\n  )\n\n}\n\nexport default Home;"],"mappings":";AAEA,OAAOA,UAAU,MAAM,0BAA0B;AAEjD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AAEpD,SAASC,OAAO,QAAQ,4BAA4B;AAEpD,SAASC,YAAY,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,WAAW,GAAGP,OAAO,CAACQ,sBAAsB,CAAC,IAAI,EAAE;EAE3D,oBACEL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACN,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVV,OAAA;MAAKW,SAAS,EAAEb,YAAa;MAAAQ,QAAA,gBACzBN,OAAA,CAAAE,SAAA;QAAAI,QAAA,EACIM,OAAO,CAACR,WAAW,CAAC,gBACpBJ,OAAA,CAACJ,UAAU;UAACiB,KAAK,EAAC,sBAAsB;UAACC,WAAW,EAAEC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEpEV,OAAA,CAAAE,SAAA;UAAAI,QAAA,EACIU,UAAU,gBACVhB,OAAA;YAAKW,SAAS,EAAC,qBAAqB;YAAAL,QAAA,EACjCW,SAAS,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BpB,OAAA,CAACL,SAAS;cAAawB,KAAK,EAAEA;YAAM,GAApBC,KAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAENV,OAAA,CAACJ,UAAU;YAACiB,KAAK,EAAC,iBAAiB;YAACC,WAAW,EAAC;UAA0B;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,gBAE/E;MAAC,gBAEL,CAAC,EACJM,UAAU,iBAAIhB,OAAA,CAACP,UAAU;QAACkB,SAAS,EAAC,gBAAgB;QAACU,KAAK,EAAEC,eAAgB;QAACC,IAAI,EAAEA,IAAK;QAACC,QAAQ,EAAEC;MAAiB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH,CAAC;EAAA,eACN,CAAC;AAGP,CAAC;AAAAgB,EAAA,GA7BKvB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}